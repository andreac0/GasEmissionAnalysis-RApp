---
title: "Greenhouse Gas Emissions in the European Union (2019)"
output: pdf_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

*A. Name of the applicant: *

*B. First Chart*

```{r pressure, echo=FALSE, message=FALSE, warning=FALSE, fig.width = 6, fig.height = 7}
# Library Loading
library(dplyr)
library(ggplot2)
library(ggrepel)
library(plotly)
library(stringr)
library(tidyr)
library(ggforce)


# Data Loading

greenhouse <- read.csv("Data/greenhouse.csv")[,-1]
population <- read.csv("Data/population.csv")[,-1]
area <- read.csv('Data/area_km.csv', stringsAsFactors=FALSE) %>% filter(LANDUSE == 'Total area') %>% select(TIME, GEO, Value) %>% distinct() %>% filter(TIME == '2014')

area$Value <- as.numeric(gsub(",.*$", "", area$Value))
area$GEO[5] <- "Germany"
area$Value <- area$Value *1000

names(area)[2] <- "countries"
names(area)[3] <- "area"

# Clean Date
greenhouse$time <- substr(greenhouse$time,1,4)
population$time <- substr(population$time,1,4)

 # Analysis of levels
# levels(greenhouse$unit)
# levels(greenhouse$airpol)
# levels(greenhouse$geo)

 
# Uniform unit of measure

greenhouse[which(greenhouse$unit == 'THS_T'), 'values'] <- greenhouse[which(greenhouse$unit == 'THS_T'), 'values']/1000 

#Drop useless columns and distinct

greenhouse <- greenhouse %>% filter(unit == 'MIO_T') %>% select(-unit) %>% distinct()

# Keep only CO2 equivalents
greenhouse <- greenhouse %>% filter(airpol != 'CH4') %>% filter(airpol != 'N2O')


 # Task 1: population and gas emission

x <- colnames(greenhouse)
x[4] <- "gas"
colnames(greenhouse) <- x

x <- colnames(population)
x[3] <- "population"
colnames(population) <- x

rm(x)

# Filter out non-EU countries 
greenhouse <- greenhouse %>% filter(substring(geo,1,2) != 'EU') %>% filter(substring(geo,1,2) != 'IS')
greenhouse$geo <-as.character(greenhouse$geo)

population$geo <-as.character(population$geo)

green_popu <- greenhouse %>% inner_join(population, by = c('geo', 'time'))
green_popu <- green_popu %>% mutate_if(is.character, as.factor)

green_popu <- green_popu %>% filter(airpol == 'GHG') %>% select(-airpol) 

countries <- c('Austria', 'Belgium', 'Bulgaria', 'Cyprus', 'Czechia', 'Germany', 'Denmark', 'Estonia','Greece', 'Spain', 'Finland', 'France', 'Croatia',
               'Hungary', 'Ireland', 'Italy',  'Lithuania', 'Luxembourg', 'Latvia', 'Malta', 'Netherlands', 'Poland', 'Portugal', 'Romania',  'Sweden', 'Slovenia','Slovakia', 'United Kingdom' )

green_popu$population <- green_popu$population/1000000

green_popu <- data.frame(green_popu, countries, gas_per_pop = green_popu$gas/green_popu$population)


years_available <- green_popu %>% select(time) %>% distinct()

df<- green_popu %>% filter(time == '2019')



green_popu <- green_popu %>% inner_join(area, by = c('countries')) %>% select(-TIME)
green_popu <- data.frame(green_popu, gas_per_area = green_popu$gas/green_popu$area)

dataset <- green_popu %>% filter(time == '2019') 

ggp <- ggplot(dataset, mapping = aes(x=population, y=gas)) +

  geom_text_repel(
   mapping = aes(label = countries),
    size = 2,
    min.segment.length = 0,
    seed = 42,
    box.padding = 0.4,
    arrow = arrow(length = unit(0.007, "npc")),
    nudge_x = .5,
    nudge_y = .5,
    color = "grey60") +
  
    geom_point(data = dataset,aes(colour=countries, size = gas/population), alpha=0.6) +
  
  labs(
    title = 'Greenhouse Gas Emissions and Population (EU countries)',
    subtitle = 'Total Greenhouse gas emissions in CO2 equivalent for the year 2019 (excluding LULUCF and memory items, including international aviation) and population',
    x = "Population (in Millions)",
    y = "Total Greenhouse Emissions (Mil. tonnes)"
  ) +  
  theme(
    legend.position = "none",
    # Customize title and subtitle font/size/color
    plot.title = element_text(
      size = 10, hjust = 0.5,
      color = "#2a475e"
    ),
    
    # Adjust axis parameters such as size and color.
    axis.text = element_text(size = 8, color = "black"),
    axis.title = element_text(size = 7),
    axis.line = element_line(colour = "grey50", arrow = grid::arrow(length = unit(0.3, "cm"))),
    
    # Use a light color for the background of the plot and the panel.
    panel.background = element_rect(fill = "white", color = "white"),
    plot.background = element_rect(fill = "white", color = "white"),
    plot.subtitle=element_text(size=5, hjust=0.5, face="italic", color="black")
  )+
  facet_zoom(x = population < 15, y = gas < 190, horizontal = FALSE ,zoom.size = 0.3, show.area = FALSE,
             zoom.data = ifelse(dataset$population < 15, TRUE, FALSE)) + coord_cartesian(clip="off")

ggp

```

The first graph shows the relationship between the total greenhouse gas emissions in tonnes of CO2 equivalents (excluding LULUCF and memory items, including international aviation) and population of EU countries, for the year 2019. The size of the points depends on the relative amount of greenhouse gas emissions, compared to population:

$$
Size\; Points = \frac{Total\; greenhouse\; gas\; emissions}{Population}
$$

*C. Second Chart*

```{r, echo=FALSE, message=FALSE, warning=FALSE, fig.width = 6, fig.height = 7}
ggp <- ggplot(dataset, mapping = aes(x=area, y=gas)) +
  geom_point(aes(colour=countries, size = gas/area), alpha=0.6) + 
  geom_text_repel(
    aes(label = countries),
    size = 2,
    min.segment.length = 0,
    seed = 42,
    box.padding = 0.4,
    arrow = arrow(length = unit(0.007, "npc")),
    nudge_x = .5,
    nudge_y = .5,
    color = "grey60") +
  
labs(
  title = 'Greenhouse Gas Emissions and Area (EU countries)',
  x = "Area (KM2)",
  y = "Total Greenhouse Emissions (Mil. of tonnes)",
  subtitle = 'Total Greenhouse gas emissions in CO2 equivalent for the year 2019 (excluding LULUCF and memory items, including international aviation) and area (km2)',
) +  
  theme(
    legend.position = "none",
    # Customize title and subtitle font/size/color
    plot.title = element_text(
      size = 10,hjust = 0.5,
      color = "#2a475e"
    ),

    
    # Adjust axis parameters such as size and color.
    axis.text = element_text(size = 8, color = "black"),
    axis.title = element_text(size = 7),
    axis.line = element_line(colour = "grey50", arrow = grid::arrow(length = unit(0.3, "cm"))),
    
    # Use a light color for the background of the plot and the panel.
    panel.background = element_rect(fill = "white", color = "white"),
    plot.background = element_rect(fill = "white", color = "white"),
    plot.subtitle=element_text(size=5, hjust=0.5, face="italic", color="black")
  )+ scale_x_continuous(labels = scales::comma)

ggp
```

The second graph shows the relationship between the total greenhouse gas emissions in tonnes of CO2 equivalents (excluding LULUCF and memory items, including international aviation) and the area in KM2 of EU countries, for the year 2019. The size of the points depends on the relative amount of greenhouse gas emissions, compared to the area of the country:

$$
Size\; Points = \frac{Total\; greenhouse\; gas\; emissions}{Area (km^2)}
$$

*D. Brief analysis*

An interactive version of these analysis, including further ones, has been developed in a R Shiny app, available at https://andreacolombo.shinyapps.io/gasemissionapp/

\begin{enumerate}

\item As could be expected, the first chart shows a direct relationship between the tonnes of greenhouse gas emissions and the number of people living in a country: the higher is the population the more emissions that country will emit. What's more interesting about this graph is looking at the relative terms of this relationship: this feature is shown through the size of the points. When looking at these figures, we can see that some smaller countries are the worst placed: Luxembourg is the EU country that in 2019 has produced the higher number of tonnes of greenhouse emissions, compared to the size of its population. Specifically, it emitted around 20 tonnes of greenhouse gas emissions per millions of people, while the EU mean is 8.28 tonnes per millions of inhabitants: this figure is also quite higher compared to the second placed of this ranking, Ireland, which emits 12 tonnes per million people.

\item When looking at the second chart, the relationship is much less clear compared to the first graph, although an underlying direct relationship could be observed. Finland, Sweden and Malta are the EU countries that emit the less emissions compared to the size of their territories: the first two are well-known to have a large surface area, mostly uninhabited, therefore it is a natural consequence to perform better in this ranking: this translates in the graph to have the corresponding points a bit isolated. The worst placed EU country is, as for the first chart, Luxembourg but this time is strictly followed by its neighbors: the Netherlands, Belgium and some big countries such as Germany, the UK and Italy. These are all countries with an high population density and are known to be the host of many industries.

\item A comprehensive analysis of the charts and the underlying data shows that Scandinavian countries are the less polluting EU countries in terms of CO2, with Finland and Sweden performing well in both the charts showed. 


\end{enumerate}